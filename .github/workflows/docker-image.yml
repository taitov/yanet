name: Docker Image

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  formatting-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run clang-format style check
        uses: jidicula/clang-format-action@v4.11.0
        with:
          clang-format-version: '10'
          exclude-regex: .*\.proto


  build-image-builder:
    needs: formatting-check
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Build the yanetplatform/builder
        run: |
          cd image
          # todo


  build-unittest:
    needs: build-image-builder
    runs-on: ubuntu-latest
    container:
      image: yanetplatform/builder
    steps:
      - uses: actions/checkout@v3
      - run: |
          meson setup -Dtarget=unittest build_unittest
          meson compile -C build_unittest
      - name: bug https://github.com/actions/upload-artifact/issues/38
        run: tar -cvzf build_unittest.tar.gz build_unittest
      - uses: actions/upload-artifact@v3
        with:
          name: build_unittest
          path: build_unittest.tar.gz
          retention-days: 1

  build-autotest:
    needs: build-image-builder
    runs-on: builder
    container:
      image: yanetplatform/builder
    steps:
      - uses: actions/checkout@v3
      - run: |
          meson setup --prefix=/target_autotest -Dtarget=autotest -Dstrip=true build_autotest
          meson compile -C build_autotest
      - run: meson install -C build_autotest
      - name: bug https://github.com/actions/upload-artifact/issues/38
        run: tar -C /target_autotest -cvzf target_autotest.tar.gz ./
      - uses: actions/upload-artifact@v3
        with:
          name: target_autotest
          path: target_autotest.tar.gz
          retention-days: 1

  build:
    needs: build-image-builder
    runs-on: ubuntu-latest
    container:
      image: yanetplatform/builder
    steps:
      - uses: actions/checkout@v3
      - run: |
          export YANET_VERSION_REVISION=${{github.run_id}}
          export YANET_VERSION_HASH=${{github.sha}}
          export YANET_VERSION_CUSTOM=unstable
          meson setup --prefix=/target \
                      -Dtarget=release \
                      -Dyanet_config=release \
                      -Darch=corei7,broadwell,knl \
                      -Dversion_revision=$YANET_VERSION_REVISION \
                      -Dversion_hash=$YANET_VERSION_HASH \
                      -Dversion_custom=$YANET_VERSION_CUSTOM \
                      build
      - run: meson compile -C build
      - name: bug https://github.com/actions/upload-artifact/issues/38
        run: tar -cvzf build.tar.gz build
      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: build.tar.gz
          retention-days: 1

  build-ubuntu1804:
    name: build (Ubuntu 18.04)
    needs: build-image-builder
    runs-on: ubuntu-latest
    container:
      image: yanetplatform/builder_ubuntu18.04
    steps:
      - uses: actions/checkout@v3
      - run: |
          meson setup --prefix=/target build
          meson compile -C build


  unittest:
    needs: build-unittest
    runs-on: ubuntu-latest
    container:
      image: yanetplatform/builder
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build_unittest
      - name: bug https://github.com/actions/upload-artifact/issues/38
        run: tar -xf build_unittest.tar.gz
      - run: meson test --no-rebuild -C build_unittest

  autotest-001_one_port:
    name: 001_one_port
    needs: build-autotest
    runs-on: autotest
    container:
      image: yanetplatform/builder
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: target_autotest
      - name: bug https://github.com/actions/upload-artifact/issues/38
        run: tar -C /usr -xf target_autotest.tar.gz
      - run: yanet-autotest-run.py autotest/units/001_one_port


  build-debian-packet:
    needs:
      - unittest
      - autotest-001_one_port
      - build
    runs-on: ubuntu-latest
    container:
      image: yanetplatform/builder
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build
      - name: bug https://github.com/actions/upload-artifact/issues/38
        run: tar -xf build.tar.gz
      - run: meson install -C build
      - run: |
          mkdir /target/DEBIAN
          cp debian/control.in /target/DEBIAN/control
          sed -i "s/__VERSION__/0.0/g" /target/DEBIAN/control
      - run: |
          mkdir /export
          dpkg-deb -b "/target" /export/yanet_0.0_ubuntu22.04.deb
      - uses: actions/upload-artifact@v3
        with:
          name: target_debian
          path: /export/yanet*.deb
          retention-days: 7
